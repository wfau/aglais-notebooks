{
  "paragraphs": [
    {
      "text": "%md\n\n# Platform set-up following Spark restart \n\n(or to set up the platform environment in any new Spark context).\n\nProbably will be needed as part of the curated set of example notebooks if we advise Spark restarts as a pre-requisite to using the system.\n\nNotes and useful links:\n- SQL syntax: https://spark.apache.org/docs/3.0.0/sql-ref.html (undocumented at 2.4.7, so have to use more recent documentation - CAUTION do not navigate to other aspects of the API from here!) ",
      "user": "admin",
      "dateUpdated": "2021-12-02 11:52:48.394",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003ePlatform set-up following Spark restart\u003c/h1\u003e\n\u003cp\u003e(or to set up the platform environment in any new Spark context).\u003c/p\u003e\n\u003cp\u003eProbably will be needed as part of the curated set of example notebooks if we advise Spark restarts as a pre-requisite to using the system.\u003c/p\u003e\n\u003cp\u003eNotes and useful links:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eSQL syntax: \u003ca href\u003d\"https://spark.apache.org/docs/3.0.0/sql-ref.html\"\u003ehttps://spark.apache.org/docs/3.0.0/sql-ref.html\u003c/a\u003e (undocumented at 2.4.7, so have to use more recent documentation - CAUTION do not navigate to other aspects of the API from here!)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1638439831593_1905068952",
      "id": "20210504-130917_57061499",
      "dateCreated": "2021-12-02 10:10:31.593",
      "dateStarted": "2021-12-02 11:52:48.398",
      "dateFinished": "2021-12-02 11:52:48.407",
      "status": "FINISHED"
    },
    {
      "title": "Catalogue structure definitions",
      "text": "%pyspark\n\n# schemas defined from WFAU MS SQL schema files, excluding the spatial indexing attributes (which are not included in the original CSVs distributed by the respective Data Centres of course)\n\nfrom pyspark.sql.types import *\n\ngaia_source_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True),\n    StructField(\u0027designation\u0027, StringType(), True),\n    StructField(\u0027source_id\u0027, LongType(), True),\n    StructField(\u0027random_index\u0027, LongType(), True),\n    StructField(\u0027ref_epoch\u0027, FloatType(), True),\n    StructField(\u0027ra\u0027, DoubleType(), True),\n    StructField(\u0027ra_error\u0027, DoubleType(), True),\n    StructField(\u0027dec\u0027, DoubleType(), True),\n    StructField(\u0027dec_error\u0027, DoubleType(), True),\n    StructField(\u0027parallax\u0027, DoubleType(), True),\n    StructField(\u0027parallax_error\u0027, DoubleType(), True),\n    StructField(\u0027parallax_over_error\u0027, FloatType(), True),\n    StructField(\u0027pm\u0027, FloatType(), True),\n    StructField(\u0027pmra\u0027, DoubleType(), True),\n    StructField(\u0027pmra_error\u0027, FloatType(), True),\n    StructField(\u0027pmdec\u0027, DoubleType(), True),\n    StructField(\u0027pmdec_error\u0027, FloatType(), True),\n    StructField(\u0027ra_dec_corr\u0027, FloatType(), True),\n    StructField(\u0027ra_parallax_corr\u0027, FloatType(), True),\n    StructField(\u0027ra_pmra_corr\u0027, FloatType(), True),\n    StructField(\u0027ra_pmdec_corr\u0027, FloatType(), True),\n    StructField(\u0027dec_parallax_corr\u0027, FloatType(), True),\n    StructField(\u0027dec_pmra_corr\u0027, FloatType(), True),\n    StructField(\u0027dec_pmdec_corr\u0027, FloatType(), True),\n    StructField(\u0027parallax_pmra_corr\u0027, FloatType(), True),\n    StructField(\u0027parallax_pmdec_corr\u0027, FloatType(), True),\n    StructField(\u0027pmra_pmdec_corr\u0027, FloatType(), True),\n    StructField(\u0027astrometric_n_obs_al\u0027, ShortType(), True),\n    StructField(\u0027astrometric_n_obs_ac\u0027, ShortType(), True),\n    StructField(\u0027astrometric_n_good_obs_al\u0027, ShortType(), True),\n    StructField(\u0027astrometric_n_bad_obs_al\u0027, ShortType(), True),\n    StructField(\u0027astrometric_gof_al\u0027, FloatType(), True),\n    StructField(\u0027astrometric_chi2_al\u0027, FloatType(), True),\n    StructField(\u0027astrometric_excess_noise\u0027, FloatType(), True),\n    StructField(\u0027astrometric_excess_noise_sig\u0027, FloatType(), True),\n    StructField(\u0027astrometric_params_solved\u0027, ShortType(), True),\n    StructField(\u0027astrometric_primary_flag\u0027, BooleanType(), True),\n    StructField(\u0027nu_eff_used_in_astrometry\u0027, FloatType(), True),\n    StructField(\u0027pseudocolour\u0027, FloatType(), True),\n    StructField(\u0027pseudocolour_error\u0027, FloatType(), True),\n    StructField(\u0027ra_pseudocolour_corr\u0027, FloatType(), True),\n    StructField(\u0027dec_pseudocolour_corr\u0027, FloatType(), True),\n    StructField(\u0027parallax_pseudocolour_corr\u0027, FloatType(), True),\n    StructField(\u0027pmra_pseudocolour_corr\u0027, FloatType(), True),\n    StructField(\u0027pmdec_pseudocolour_corr\u0027, FloatType(), True),\n    StructField(\u0027astrometric_matched_transits\u0027, ShortType(), True),\n    StructField(\u0027visibility_periods_used\u0027, ShortType(), True),\n    StructField(\u0027astrometric_sigma5d_max\u0027, FloatType(), True),\n    StructField(\u0027matched_transits\u0027, ShortType(), True),\n    StructField(\u0027new_matched_transits\u0027, ShortType(), True),\n    StructField(\u0027matched_transits_removed\u0027, ShortType(), True),\n    StructField(\u0027ipd_gof_harmonic_amplitude\u0027, FloatType(), True),\n    StructField(\u0027ipd_gof_harmonic_phase\u0027, FloatType(), True),\n    StructField(\u0027ipd_frac_multi_peak\u0027, ShortType(), True),\n    StructField(\u0027ipd_frac_odd_win\u0027, ShortType(), True),\n    StructField(\u0027ruwe\u0027, FloatType(), True),\n    StructField(\u0027scan_direction_strength_k1\u0027, FloatType(), True),\n    StructField(\u0027scan_direction_strength_k2\u0027, FloatType(), True),\n    StructField(\u0027scan_direction_strength_k3\u0027, FloatType(), True),\n    StructField(\u0027scan_direction_strength_k4\u0027, FloatType(), True),\n    StructField(\u0027scan_direction_mean_k1\u0027, FloatType(), True),\n    StructField(\u0027scan_direction_mean_k2\u0027, FloatType(), True),\n    StructField(\u0027scan_direction_mean_k3\u0027, FloatType(), True),\n    StructField(\u0027scan_direction_mean_k4\u0027, FloatType(), True),\n    StructField(\u0027duplicated_source\u0027, BooleanType(), True),\n    StructField(\u0027phot_g_n_obs\u0027, ShortType(), True),\n    StructField(\u0027phot_g_mean_flux\u0027, DoubleType(), True),\n    StructField(\u0027phot_g_mean_flux_error\u0027, FloatType(), True),\n    StructField(\u0027phot_g_mean_flux_over_error\u0027, FloatType(), True),\n    StructField(\u0027phot_g_mean_mag\u0027, FloatType(), True),\n    StructField(\u0027phot_bp_n_obs\u0027, ShortType(), True),\n    StructField(\u0027phot_bp_mean_flux\u0027, DoubleType(), True),\n    StructField(\u0027phot_bp_mean_flux_error\u0027, FloatType(), True),\n    StructField(\u0027phot_bp_mean_flux_over_error\u0027, FloatType(), True),\n    StructField(\u0027phot_bp_mean_mag\u0027, FloatType(), True),\n    StructField(\u0027phot_rp_n_obs\u0027, ShortType(), True),\n    StructField(\u0027phot_rp_mean_flux\u0027, DoubleType(), True),\n    StructField(\u0027phot_rp_mean_flux_error\u0027, FloatType(), True),\n    StructField(\u0027phot_rp_mean_flux_over_error\u0027, FloatType(), True),\n    StructField(\u0027phot_rp_mean_mag\u0027, FloatType(), True),\n    StructField(\u0027phot_bp_n_contaminated_transits\u0027, ShortType(), True),\n    StructField(\u0027phot_bp_n_blended_transits\u0027, ShortType(), True),\n    StructField(\u0027phot_rp_n_contaminated_transits\u0027, ShortType(), True),\n    StructField(\u0027phot_rp_n_blended_transits\u0027, ShortType(), True),\n    StructField(\u0027phot_proc_mode\u0027, ShortType(), True),\n    StructField(\u0027phot_bp_rp_excess_factor\u0027, FloatType(), True),\n    StructField(\u0027bp_rp\u0027, FloatType(), True),\n    StructField(\u0027bp_g\u0027, FloatType(), True),\n    StructField(\u0027g_rp\u0027, FloatType(), True),\n    StructField(\u0027dr2_radial_velocity\u0027, FloatType(), True),\n    StructField(\u0027dr2_radial_velocity_error\u0027, FloatType(), True),\n    StructField(\u0027dr2_rv_nb_transits\u0027, ShortType(), True),\n    StructField(\u0027dr2_rv_template_teff\u0027, FloatType(), True),\n    StructField(\u0027dr2_rv_template_logg\u0027, FloatType(), True),\n    StructField(\u0027dr2_rv_template_fe_h\u0027, FloatType(), True),\n    StructField(\u0027l\u0027, DoubleType(), True),\n    StructField(\u0027b\u0027, DoubleType(), True),\n    StructField(\u0027ecl_lon\u0027, DoubleType(), True),\n    StructField(\u0027ecl_lat\u0027, DoubleType(), True),\n])\n\ntwomass_psc_schema \u003d StructType([\n    StructField(\u0027ra\u0027, DoubleType(), True),\n    StructField(\u0027dec\u0027, DoubleType(), True),\n    StructField(\u0027err_maj\u0027, FloatType(), True),\n    StructField(\u0027err_min\u0027, FloatType(), True),\n    StructField(\u0027err_ang\u0027, ShortType(), True),\n    StructField(\u0027designation\u0027, StringType(), True),\n    StructField(\u0027j_m\u0027, FloatType(), True),\n    StructField(\u0027j_cmsig\u0027, FloatType(), True),\n    StructField(\u0027j_msigcom\u0027, FloatType(), True),\n    StructField(\u0027j_snr\u0027, FloatType(), True),\n    StructField(\u0027h_m\u0027, FloatType(), True),\n    StructField(\u0027h_cmsig\u0027, FloatType(), True),\n    StructField(\u0027h_msigcom\u0027, FloatType(), True),\n    StructField(\u0027h_snr\u0027, FloatType(), True),\n    StructField(\u0027k_m\u0027, FloatType(), True),\n    StructField(\u0027k_cmsig\u0027, FloatType(), True),\n    StructField(\u0027k_msigcom\u0027, FloatType(), True),\n    StructField(\u0027k_snr\u0027, FloatType(), True),\n    StructField(\u0027ph_qual\u0027, StringType(), True),\n    StructField(\u0027rd_flg\u0027, StringType(), True),\n    StructField(\u0027bl_flg\u0027, StringType(), True),\n    StructField(\u0027cc_flg\u0027, StringType(), True),\n    StructField(\u0027ndet\u0027, StringType(), True),\n    StructField(\u0027prox\u0027, FloatType(), True),\n    StructField(\u0027pxpa\u0027, ShortType(), True),\n    StructField(\u0027pxcntr\u0027, IntegerType(), True),\n    StructField(\u0027gal_contam\u0027, ShortType(), True),\n    StructField(\u0027mp_flg\u0027, ShortType(), True),\n    StructField(\u0027pts_key\u0027, IntegerType(), True),\n    StructField(\u0027hemis\u0027, StringType(), True),\n    StructField(\u0027date\u0027, DateType(), True),\n    StructField(\u0027scan\u0027, ShortType(), True),\n    StructField(\u0027glon\u0027, FloatType(), True),\n    StructField(\u0027glat\u0027, FloatType(), True),\n    StructField(\u0027x_scan\u0027, FloatType(), True),\n    StructField(\u0027jdate\u0027, DoubleType(), True),\n    StructField(\u0027j_psfchi\u0027, FloatType(), True),\n    StructField(\u0027h_psfchi\u0027, FloatType(), True),\n    StructField(\u0027k_psfchi\u0027, FloatType(), True),\n    StructField(\u0027j_m_stdap\u0027, FloatType(), True),\n    StructField(\u0027j_msig_stdap\u0027, FloatType(), True),\n    StructField(\u0027h_m_stdap\u0027, FloatType(), True),\n    StructField(\u0027h_msig_stdap\u0027, FloatType(), True),\n    StructField(\u0027k_m_stdap\u0027, FloatType(), True),\n    StructField(\u0027k_msig_stdap\u0027, FloatType(), True),\n    StructField(\u0027dist_edge_ns\u0027, IntegerType(), True),\n    StructField(\u0027dist_edge_ew\u0027, IntegerType(), True),\n    StructField(\u0027dist_edge_flg\u0027, StringType(), True),\n    StructField(\u0027dup_src\u0027, ShortType(), True),\n    StructField(\u0027use_src\u0027, ShortType(), True),\n    StructField(\u0027a\u0027, StringType(), True),\n    StructField(\u0027dist_opt\u0027, FloatType(), True),\n    StructField(\u0027phi_opt\u0027, ShortType(), True),\n    StructField(\u0027b_m_opt\u0027, FloatType(), True),\n    StructField(\u0027vr_m_opt\u0027, FloatType(), True),\n    StructField(\u0027nopt_mchs\u0027, ShortType(), True),\n    StructField(\u0027ext_key\u0027, IntegerType(), True),\n    StructField(\u0027scan_key\u0027, IntegerType(), True),\n    StructField(\u0027coadd_key\u0027, IntegerType(), True),\n    StructField(\u0027coadd\u0027, ShortType(), True),\n])\n\nallwise_sc_schema \u003d StructType([\n    StructField(\u0027designation\u0027, StringType(), True),\n    StructField(\u0027ra\u0027, DoubleType(), True),\n    StructField(\u0027dec\u0027, DoubleType(), True),\n    StructField(\u0027sigra\u0027, DoubleType(), True),\n    StructField(\u0027sigdec\u0027, DoubleType(), True),\n    StructField(\u0027sigradec\u0027, DoubleType(), True),\n    StructField(\u0027glon\u0027, DoubleType(), True),\n    StructField(\u0027glat\u0027, DoubleType(), True),\n    StructField(\u0027elon\u0027, DoubleType(), True),\n    StructField(\u0027elat\u0027, DoubleType(), True),\n    StructField(\u0027wx\u0027, DoubleType(), True),\n    StructField(\u0027wy\u0027, DoubleType(), True),\n    StructField(\u0027cntr\u0027, LongType(), True),\n    StructField(\u0027src_id\u0027, StringType(), True),\n    StructField(\u0027coadd_id\u0027, StringType(), True),\n    StructField(\u0027src\u0027, IntegerType(), True),\n    StructField(\u0027w1mpro\u0027, DoubleType(), True),\n    StructField(\u0027w1sigmpro\u0027, DoubleType(), True),\n    StructField(\u0027w1snr\u0027, DoubleType(), True),\n    StructField(\u0027w1rchi2\u0027, FloatType(), True),\n    StructField(\u0027w2mpro\u0027, DoubleType(), True),\n    StructField(\u0027w2sigmpro\u0027, DoubleType(), True),\n    StructField(\u0027w2snr\u0027, DoubleType(), True),\n    StructField(\u0027w2rchi2\u0027, FloatType(), True),\n    StructField(\u0027w3mpro\u0027, DoubleType(), True),\n    StructField(\u0027w3sigmpro\u0027, DoubleType(), True),\n    StructField(\u0027w3snr\u0027, DoubleType(), True),\n    StructField(\u0027w3rchi2\u0027, FloatType(), True),\n    StructField(\u0027w4mpro\u0027, DoubleType(), True),\n    StructField(\u0027w4sigmpro\u0027, DoubleType(), True),\n    StructField(\u0027w4snr\u0027, DoubleType(), True),\n    StructField(\u0027w4rchi2\u0027, FloatType(), True),\n    StructField(\u0027rchi2\u0027, FloatType(), True),\n    StructField(\u0027nb\u0027, IntegerType(), True),\n    StructField(\u0027na\u0027, IntegerType(), True),\n    StructField(\u0027w1sat\u0027, DoubleType(), True),\n    StructField(\u0027w2sat\u0027, DoubleType(), True),\n    StructField(\u0027w3sat\u0027, DoubleType(), True),\n    StructField(\u0027w4sat\u0027, DoubleType(), True),\n    StructField(\u0027satnum\u0027, StringType(), True),\n    StructField(\u0027ra_pm\u0027, DoubleType(), True),\n    StructField(\u0027dec_pm\u0027, DoubleType(), True),\n    StructField(\u0027sigra_pm\u0027, DoubleType(), True),\n    StructField(\u0027sigdec_pm\u0027, DoubleType(), True),\n    StructField(\u0027sigradec_pm\u0027, DoubleType(), True),\n    StructField(\u0027pmra\u0027, IntegerType(), True),\n    StructField(\u0027sigpmra\u0027, IntegerType(), True),\n    StructField(\u0027pmdec\u0027, IntegerType(), True),\n    StructField(\u0027sigpmdec\u0027, IntegerType(), True),\n    StructField(\u0027w1rchi2_pm\u0027, FloatType(), True),\n    StructField(\u0027w2rchi2_pm\u0027, FloatType(), True),\n    StructField(\u0027w3rchi2_pm\u0027, FloatType(), True),\n    StructField(\u0027w4rchi2_pm\u0027, FloatType(), True),\n    StructField(\u0027rchi2_pm\u0027, FloatType(), True),\n    StructField(\u0027pmcode\u0027, StringType(), True),\n    StructField(\u0027cc_flags\u0027, StringType(), True),\n    StructField(\u0027rel\u0027, StringType(), True),\n    StructField(\u0027ext_flg\u0027, IntegerType(), True),\n    StructField(\u0027var_flg\u0027, StringType(), True),\n    StructField(\u0027ph_qual\u0027, StringType(), True),\n    StructField(\u0027det_bit\u0027, IntegerType(), True),\n    StructField(\u0027moon_lev\u0027, StringType(), True),\n    StructField(\u0027w1nm\u0027, IntegerType(), True),\n    StructField(\u0027w1m\u0027, IntegerType(), True),\n    StructField(\u0027w2nm\u0027, IntegerType(), True),\n    StructField(\u0027w2m\u0027, IntegerType(), True),\n    StructField(\u0027w3nm\u0027, IntegerType(), True),\n    StructField(\u0027w3m\u0027, IntegerType(), True),\n    StructField(\u0027w4nm\u0027, IntegerType(), True),\n    StructField(\u0027w4m\u0027, IntegerType(), True),\n    StructField(\u0027w1cov\u0027, DoubleType(), True),\n    StructField(\u0027w2cov\u0027, DoubleType(), True),\n    StructField(\u0027w3cov\u0027, DoubleType(), True),\n    StructField(\u0027w4cov\u0027, DoubleType(), True),\n    StructField(\u0027w1cc_map\u0027, IntegerType(), True),\n    StructField(\u0027w1cc_map_str\u0027, StringType(), True),\n    StructField(\u0027w2cc_map\u0027, IntegerType(), True),\n    StructField(\u0027w2cc_map_str\u0027, StringType(), True),\n    StructField(\u0027w3cc_map\u0027, IntegerType(), True),\n    StructField(\u0027w3cc_map_str\u0027, StringType(), True),\n    StructField(\u0027w4cc_map\u0027, IntegerType(), True),\n    StructField(\u0027w4cc_map_str\u0027, StringType(), True),\n    StructField(\u0027best_use_cntr\u0027, LongType(), True),\n    StructField(\u0027ngrp\u0027, ShortType(), True),\n    StructField(\u0027w1flux\u0027, FloatType(), True),\n    StructField(\u0027w1sigflux\u0027, FloatType(), True),\n    StructField(\u0027w1sky\u0027, DoubleType(), True),\n    StructField(\u0027w1sigsk\u0027, DoubleType(), True),\n    StructField(\u0027w1conf\u0027, DoubleType(), True),\n    StructField(\u0027w2flux\u0027, FloatType(), True),\n    StructField(\u0027w2sigflux\u0027, FloatType(), True),\n    StructField(\u0027w2sky\u0027, DoubleType(), True),\n    StructField(\u0027w2sigsk\u0027, DoubleType(), True),\n    StructField(\u0027w2conf\u0027, DoubleType(), True),\n    StructField(\u0027w3flux\u0027, FloatType(), True),\n    StructField(\u0027w3sigflux\u0027, FloatType(), True),\n    StructField(\u0027w3sky\u0027, DoubleType(), True),\n    StructField(\u0027w3sigsk\u0027, DoubleType(), True),\n    StructField(\u0027w3conf\u0027, DoubleType(), True),\n    StructField(\u0027w4flux\u0027, FloatType(), True),\n    StructField(\u0027w4sigflux\u0027, FloatType(), True),\n    StructField(\u0027w4sky\u0027, DoubleType(), True),\n    StructField(\u0027w4sigsk\u0027, DoubleType(), True),\n    StructField(\u0027w4conf\u0027, DoubleType(), True),\n    StructField(\u0027w1mag\u0027, DoubleType(), True),\n    StructField(\u0027w1sigm\u0027, DoubleType(), True),\n    StructField(\u0027w1flg\u0027, IntegerType(), True),\n    StructField(\u0027w1mcor\u0027, DoubleType(), True),\n    StructField(\u0027w2mag\u0027, DoubleType(), True),\n    StructField(\u0027w2sigm\u0027, DoubleType(), True),\n    StructField(\u0027w2flg\u0027, IntegerType(), True),\n    StructField(\u0027w2mcor\u0027, DoubleType(), True),\n    StructField(\u0027w3mag\u0027, DoubleType(), True),\n    StructField(\u0027w3sigm\u0027, DoubleType(), True),\n    StructField(\u0027w3flg\u0027, IntegerType(), True),\n    StructField(\u0027w3mcor\u0027, DoubleType(), True),\n    StructField(\u0027w4mag\u0027, DoubleType(), True),\n    StructField(\u0027w4sigm\u0027, DoubleType(), True),\n    StructField(\u0027w4flg\u0027, IntegerType(), True),\n    StructField(\u0027w4mcor\u0027, DoubleType(), True),\n    StructField(\u0027w1mag_1\u0027, DoubleType(), True),\n    StructField(\u0027w1sigm_1\u0027, DoubleType(), True),\n    StructField(\u0027w1flg_1\u0027, IntegerType(), True),\n    StructField(\u0027w2mag_1\u0027, DoubleType(), True),\n    StructField(\u0027w2sigm_1\u0027, DoubleType(), True),\n    StructField(\u0027w2flg_1\u0027, IntegerType(), True),\n    StructField(\u0027w3mag_1\u0027, DoubleType(), True),\n    StructField(\u0027w3sigm_1\u0027, DoubleType(), True),\n    StructField(\u0027w3flg_1\u0027, IntegerType(), True),\n    StructField(\u0027w4mag_1\u0027, DoubleType(), True),\n    StructField(\u0027w4sigm_1\u0027, DoubleType(), True),\n    StructField(\u0027w4flg_1\u0027, IntegerType(), True),\n    StructField(\u0027w1mag_2\u0027, DoubleType(), True),\n    StructField(\u0027w1sigm_2\u0027, DoubleType(), True),\n    StructField(\u0027w1flg_2\u0027, IntegerType(), True),\n    StructField(\u0027w2mag_2\u0027, DoubleType(), True),\n    StructField(\u0027w2sigm_2\u0027, DoubleType(), True),\n    StructField(\u0027w2flg_2\u0027, IntegerType(), True),\n    StructField(\u0027w3mag_2\u0027, DoubleType(), True),\n    StructField(\u0027w3sigm_2\u0027, DoubleType(), True),\n    StructField(\u0027w3flg_2\u0027, IntegerType(), True),\n    StructField(\u0027w4mag_2\u0027, DoubleType(), True),\n    StructField(\u0027w4sigm_2\u0027, DoubleType(), True),\n    StructField(\u0027w4flg_2\u0027, IntegerType(), True),\n    StructField(\u0027w1mag_3\u0027, DoubleType(), True),\n    StructField(\u0027w1sigm_3\u0027, DoubleType(), True),\n    StructField(\u0027w1flg_3\u0027, IntegerType(), True),\n    StructField(\u0027w2mag_3\u0027, DoubleType(), True),\n    StructField(\u0027w2sigm_3\u0027, DoubleType(), True),\n    StructField(\u0027w2flg_3\u0027, IntegerType(), True),\n    StructField(\u0027w3mag_3\u0027, DoubleType(), True),\n    StructField(\u0027w3sigm_3\u0027, DoubleType(), True),\n    StructField(\u0027w3flg_3\u0027, IntegerType(), True),\n    StructField(\u0027w4mag_3\u0027, DoubleType(), True),\n    StructField(\u0027w4sigm_3\u0027, DoubleType(), True),\n    StructField(\u0027w4flg_3\u0027, IntegerType(), True),\n    StructField(\u0027w1mag_4\u0027, DoubleType(), True),\n    StructField(\u0027w1sigm_4\u0027, DoubleType(), True),\n    StructField(\u0027w1flg_4\u0027, IntegerType(), True),\n    StructField(\u0027w2mag_4\u0027, DoubleType(), True),\n    StructField(\u0027w2sigm_4\u0027, DoubleType(), True),\n    StructField(\u0027w2flg_4\u0027, IntegerType(), True),\n    StructField(\u0027w3mag_4\u0027, DoubleType(), True),\n    StructField(\u0027w3sigm_4\u0027, DoubleType(), True),\n    StructField(\u0027w3flg_4\u0027, IntegerType(), True),\n    StructField(\u0027w4mag_4\u0027, DoubleType(), True),\n    StructField(\u0027w4sigm_4\u0027, DoubleType(), True),\n    StructField(\u0027w4flg_4\u0027, IntegerType(), True),\n    StructField(\u0027w1mag_5\u0027, DoubleType(), True),\n    StructField(\u0027w1sigm_5\u0027, DoubleType(), True),\n    StructField(\u0027w1flg_5\u0027, IntegerType(), True),\n    StructField(\u0027w2mag_5\u0027, DoubleType(), True),\n    StructField(\u0027w2sigm_5\u0027, DoubleType(), True),\n    StructField(\u0027w2flg_5\u0027, IntegerType(), True),\n    StructField(\u0027w3mag_5\u0027, DoubleType(), True),\n    StructField(\u0027w3sigm_5\u0027, DoubleType(), True),\n    StructField(\u0027w3flg_5\u0027, IntegerType(), True),\n    StructField(\u0027w4mag_5\u0027, DoubleType(), True),\n    StructField(\u0027w4sigm_5\u0027, DoubleType(), True),\n    StructField(\u0027w4flg_5\u0027, IntegerType(), True),\n    StructField(\u0027w1mag_6\u0027, DoubleType(), True),\n    StructField(\u0027w1sigm_6\u0027, DoubleType(), True),\n    StructField(\u0027w1flg_6\u0027, IntegerType(), True),\n    StructField(\u0027w2mag_6\u0027, DoubleType(), True),\n    StructField(\u0027w2sigm_6\u0027, DoubleType(), True),\n    StructField(\u0027w2flg_6\u0027, IntegerType(), True),\n    StructField(\u0027w3mag_6\u0027, DoubleType(), True),\n    StructField(\u0027w3sigm_6\u0027, DoubleType(), True),\n    StructField(\u0027w3flg_6\u0027, IntegerType(), True),\n    StructField(\u0027w4mag_6\u0027, DoubleType(), True),\n    StructField(\u0027w4sigm_6\u0027, DoubleType(), True),\n    StructField(\u0027w4flg_6\u0027, IntegerType(), True),\n    StructField(\u0027w1mag_7\u0027, DoubleType(), True),\n    StructField(\u0027w1sigm_7\u0027, DoubleType(), True),\n    StructField(\u0027w1flg_7\u0027, IntegerType(), True),\n    StructField(\u0027w2mag_7\u0027, DoubleType(), True),\n    StructField(\u0027w2sigm_7\u0027, DoubleType(), True),\n    StructField(\u0027w2flg_7\u0027, IntegerType(), True),\n    StructField(\u0027w3mag_7\u0027, DoubleType(), True),\n    StructField(\u0027w3sigm_7\u0027, DoubleType(), True),\n    StructField(\u0027w3flg_7\u0027, IntegerType(), True),\n    StructField(\u0027w4mag_7\u0027, DoubleType(), True),\n    StructField(\u0027w4sigm_7\u0027, DoubleType(), True),\n    StructField(\u0027w4flg_7\u0027, IntegerType(), True),\n    StructField(\u0027w1mag_8\u0027, DoubleType(), True),\n    StructField(\u0027w1sigm_8\u0027, DoubleType(), True),\n    StructField(\u0027w1flg_8\u0027, IntegerType(), True),\n    StructField(\u0027w2mag_8\u0027, DoubleType(), True),\n    StructField(\u0027w2sigm_8\u0027, DoubleType(), True),\n    StructField(\u0027w2flg_8\u0027, IntegerType(), True),\n    StructField(\u0027w3mag_8\u0027, DoubleType(), True),\n    StructField(\u0027w3sigm_8\u0027, DoubleType(), True),\n    StructField(\u0027w3flg_8\u0027, IntegerType(), True),\n    StructField(\u0027w4mag_8\u0027, DoubleType(), True),\n    StructField(\u0027w4sigm_8\u0027, DoubleType(), True),\n    StructField(\u0027w4flg_8\u0027, IntegerType(), True),\n    StructField(\u0027w1magp\u0027, DoubleType(), True),\n    StructField(\u0027w1sigp1\u0027, DoubleType(), True),\n    StructField(\u0027w1sigp2\u0027, DoubleType(), True),\n    StructField(\u0027w1k\u0027, DoubleType(), True),\n    StructField(\u0027w1ndf\u0027, IntegerType(), True),\n    StructField(\u0027w1mlq\u0027, DoubleType(), True),\n    StructField(\u0027w1mjdmin\u0027, DoubleType(), True),\n    StructField(\u0027w1mjdmax\u0027, DoubleType(), True),\n    StructField(\u0027w1mjdmean\u0027, DoubleType(), True),\n    StructField(\u0027w2magp\u0027, DoubleType(), True),\n    StructField(\u0027w2sigp1\u0027, DoubleType(), True),\n    StructField(\u0027w2sigp2\u0027, DoubleType(), True),\n    StructField(\u0027w2k\u0027, DoubleType(), True),\n    StructField(\u0027w2ndf\u0027, IntegerType(), True),\n    StructField(\u0027w2mlq\u0027, DoubleType(), True),\n    StructField(\u0027w2mjdmin\u0027, DoubleType(), True),\n    StructField(\u0027w2mjdmax\u0027, DoubleType(), True),\n    StructField(\u0027w2mjdmean\u0027, DoubleType(), True),\n    StructField(\u0027w3magp\u0027, DoubleType(), True),\n    StructField(\u0027w3sigp1\u0027, DoubleType(), True),\n    StructField(\u0027w3sigp2\u0027, DoubleType(), True),\n    StructField(\u0027w3k\u0027, DoubleType(), True),\n    StructField(\u0027w3ndf\u0027, IntegerType(), True),\n    StructField(\u0027w3mlq\u0027, DoubleType(), True),\n    StructField(\u0027w3mjdmin\u0027, DoubleType(), True),\n    StructField(\u0027w3mjdmax\u0027, DoubleType(), True),\n    StructField(\u0027w3mjdmean\u0027, DoubleType(), True),\n    StructField(\u0027w4magp\u0027, DoubleType(), True),\n    StructField(\u0027w4sigp1\u0027, DoubleType(), True),\n    StructField(\u0027w4sigp2\u0027, DoubleType(), True),\n    StructField(\u0027w4k\u0027, DoubleType(), True),\n    StructField(\u0027w4ndf\u0027, IntegerType(), True),\n    StructField(\u0027w4mlq\u0027, DoubleType(), True),\n    StructField(\u0027w4mjdmin\u0027, DoubleType(), True),\n    StructField(\u0027w4mjdmax\u0027, DoubleType(), True),\n    StructField(\u0027w4mjdmean\u0027, DoubleType(), True),\n    StructField(\u0027rho12\u0027, IntegerType(), True),\n    StructField(\u0027rho23\u0027, IntegerType(), True),\n    StructField(\u0027rho34\u0027, IntegerType(), True),\n    StructField(\u0027q12\u0027, IntegerType(), True),\n    StructField(\u0027q23\u0027, IntegerType(), True),\n    StructField(\u0027q34\u0027, IntegerType(), True),\n    StructField(\u0027xscprox\u0027, DoubleType(), True),\n    StructField(\u0027w1rsemi\u0027, DoubleType(), True),\n    StructField(\u0027w1ba\u0027, DoubleType(), True),\n    StructField(\u0027w1pa\u0027, DoubleType(), True),\n    StructField(\u0027w1gmag\u0027, DoubleType(), True),\n    StructField(\u0027w1gerr\u0027, DoubleType(), True),\n    StructField(\u0027w1gflg\u0027, IntegerType(), True),\n    StructField(\u0027w2rsemi\u0027, DoubleType(), True),\n    StructField(\u0027w2ba\u0027, DoubleType(), True),\n    StructField(\u0027w2pa\u0027, DoubleType(), True),\n    StructField(\u0027w2gmag\u0027, DoubleType(), True),\n    StructField(\u0027w2gerr\u0027, DoubleType(), True),\n    StructField(\u0027w2gflg\u0027, IntegerType(), True),\n    StructField(\u0027w3rsemi\u0027, DoubleType(), True),\n    StructField(\u0027w3ba\u0027, DoubleType(), True),\n    StructField(\u0027w3pa\u0027, DoubleType(), True),\n    StructField(\u0027w3gmag\u0027, DoubleType(), True),\n    StructField(\u0027w3gerr\u0027, DoubleType(), True),\n    StructField(\u0027w3gflg\u0027, IntegerType(), True),\n    StructField(\u0027w4rsemi\u0027, DoubleType(), True),\n    StructField(\u0027w4ba\u0027, DoubleType(), True),\n    StructField(\u0027w4pa\u0027, DoubleType(), True),\n    StructField(\u0027w4gmag\u0027, DoubleType(), True),\n    StructField(\u0027w4gerr\u0027, DoubleType(), True),\n    StructField(\u0027w4gflg\u0027, IntegerType(), True),\n    StructField(\u0027tmass_key\u0027, IntegerType(), True),\n    StructField(\u0027r_2mass\u0027, DoubleType(), True),\n    StructField(\u0027pa_2mass\u0027, DoubleType(), True),\n    StructField(\u0027n_2mass\u0027, IntegerType(), True),\n    StructField(\u0027j_m_2mass\u0027, DoubleType(), True),\n    StructField(\u0027j_msig_2mass\u0027, DoubleType(), True),\n    StructField(\u0027h_m_2mass\u0027, DoubleType(), True),\n    StructField(\u0027h_msig_2mass\u0027, DoubleType(), True),\n    StructField(\u0027k_m_2mass\u0027, DoubleType(), True),\n    StructField(\u0027k_msig_2mass\u0027, DoubleType(), True),\n    StructField(\u0027x\u0027, DoubleType(), True),\n    StructField(\u0027y\u0027, DoubleType(), True),\n    StructField(\u0027z\u0027, DoubleType(), True),\n    StructField(\u0027spt_ind\u0027, IntegerType(), True),\n    StructField(\u0027htm20\u0027, LongType(), True),\n    StructField(\u0027spare\u0027, BooleanType(), True)\n])\n# N.B. that last column is the easiest way to work around the IPAC files having a trailing \"|\" at the end of each record which is interpereted as another column... d\u0027oh\n\npanstarrs_dr1_otmo_schema \u003d StructType([\n    StructField(\u0027obj_id\u0027, LongType(), True),\n    StructField(\u0027projection_id\u0027, ShortType(), True),\n    StructField(\u0027sky_cell_id\u0027, ShortType(), True),\n    StructField(\u0027obj_info_flag\u0027, IntegerType(), True),\n    StructField(\u0027quality_flag\u0027, ShortType(), True),\n    StructField(\u0027ra_mean\u0027, DoubleType(), True),\n    StructField(\u0027dec_mean\u0027, DoubleType(), True),\n    StructField(\u0027ra_mean_err\u0027, FloatType(), True),\n    StructField(\u0027dec_mean_err\u0027, FloatType(), True),\n    StructField(\u0027epoch_mean\u0027, DoubleType(), True),\n    StructField(\u0027n_stack_detections\u0027, ShortType(), True),\n    StructField(\u0027n_detections\u0027, ShortType(), True),\n    StructField(\u0027ng\u0027, ShortType(), True),\n    StructField(\u0027nr\u0027, ShortType(), True),\n    StructField(\u0027ni\u0027, ShortType(), True),\n    StructField(\u0027nz\u0027, ShortType(), True),\n    StructField(\u0027ny\u0027, ShortType(), True),\n    StructField(\u0027g_qf_perfect\u0027, FloatType(), True),\n    StructField(\u0027g_mean_psf_mag\u0027, FloatType(), True),\n    StructField(\u0027g_mean_psf_mag_err\u0027, FloatType(), True),\n    StructField(\u0027g_mean_psf_mag_std\u0027, FloatType(), True),\n    StructField(\u0027g_mean_psf_mag_npt\u0027, ShortType(), True),\n    StructField(\u0027g_mean_psf_mag_min\u0027, FloatType(), True),\n    StructField(\u0027g_mean_psf_mag_max\u0027, FloatType(), True),\n    StructField(\u0027g_mean_kron_mag\u0027, FloatType(), True),\n    StructField(\u0027g_mean_kron_mag_err\u0027, FloatType(), True),\n    StructField(\u0027g_flags\u0027, IntegerType(), True),\n    StructField(\u0027r_qf_perfect\u0027, FloatType(), True),\n    StructField(\u0027r_mean_psf_mag\u0027, FloatType(), True),\n    StructField(\u0027r_mean_psf_mag_err\u0027, FloatType(), True),\n    StructField(\u0027r_mean_psf_mag_std\u0027, FloatType(), True),\n    StructField(\u0027r_mean_psf_mag_npt\u0027, ShortType(), True),\n    StructField(\u0027r_mean_psf_mag_min\u0027, FloatType(), True),\n    StructField(\u0027r_mean_psf_mag_max\u0027, FloatType(), True),\n    StructField(\u0027r_mean_kron_mag\u0027, FloatType(), True),\n    StructField(\u0027r_mean_kron_mag_err\u0027, FloatType(), True),\n    StructField(\u0027r_flags\u0027, IntegerType(), True),\n    StructField(\u0027i_qf_perfect\u0027, FloatType(), True),\n    StructField(\u0027i_mean_psf_mag\u0027, FloatType(), True),\n    StructField(\u0027i_mean_psf_mag_err\u0027, FloatType(), True),\n    StructField(\u0027i_mean_psf_mag_std\u0027, FloatType(), True),\n    StructField(\u0027i_mean_psf_mag_npt\u0027, ShortType(), True),\n    StructField(\u0027i_mean_psf_mag_min\u0027, FloatType(), True),\n    StructField(\u0027i_mean_psf_mag_max\u0027, FloatType(), True),\n    StructField(\u0027i_mean_kron_mag\u0027, FloatType(), True),\n    StructField(\u0027i_mean_kron_mag_err\u0027, FloatType(), True),\n    StructField(\u0027i_flags\u0027, IntegerType(), True),\n    StructField(\u0027z_qf_perfect\u0027, FloatType(), True),\n    StructField(\u0027z_mean_psf_mag\u0027, FloatType(), True),\n    StructField(\u0027z_mean_psf_mag_err\u0027, FloatType(), True),\n    StructField(\u0027z_mean_psf_mag_std\u0027, FloatType(), True),\n    StructField(\u0027z_mean_psf_mag_npt\u0027, ShortType(), True),\n    StructField(\u0027z_mean_psf_mag_min\u0027, FloatType(), True),\n    StructField(\u0027z_mean_psf_mag_max\u0027, FloatType(), True),\n    StructField(\u0027z_mean_kron_mag\u0027, FloatType(), True),\n    StructField(\u0027z_mean_kron_mag_err\u0027, FloatType(), True),\n    StructField(\u0027z_flags\u0027, IntegerType(), True),\n    StructField(\u0027y_qf_perfect\u0027, FloatType(), True),\n    StructField(\u0027y_mean_psf_mag\u0027, FloatType(), True),\n    StructField(\u0027y_mean_psf_mag_err\u0027, FloatType(), True),\n    StructField(\u0027y_mean_psf_mag_std\u0027, FloatType(), True),\n    StructField(\u0027y_mean_psf_mag_npt\u0027, ShortType(), True),\n    StructField(\u0027y_mean_psf_mag_min\u0027, FloatType(), True),\n    StructField(\u0027y_mean_psf_mag_max\u0027, FloatType(), True),\n    StructField(\u0027y_mean_kron_mag\u0027, FloatType(), True),\n    StructField(\u0027y_mean_kron_mag_err\u0027, FloatType(), True),\n    StructField(\u0027y_flags\u0027, IntegerType(), True),\n])\n\n\n# crossmatch table schemas:\n\n# PS1\npanstarrs1_best_neighbour_schema \u003d StructType([\n    StructField(\u0027source_id\u0027, LongType(), True),\n    StructField(\u0027clean_panstarrs1_oid\u0027, LongType(), True),\n    StructField(\u0027original_ext_source_id\u0027, LongType(), True),\n    StructField(\u0027angular_distance\u0027, FloatType(), True),\n    StructField(\u0027number_of_neighbours\u0027, ByteType(), True),\n    StructField(\u0027number_of_mates\u0027, ByteType(), True),\n    StructField(\u0027xm_flag\u0027, ShortType(), True),\n])\n\n# ALLWISE:\nallwise_best_neighbour_schema \u003d StructType([\n    StructField(\u0027source_id\u0027, LongType(), True),\n    StructField(\u0027original_ext_source_id\u0027, StringType(), True),\n    StructField(\u0027angular_distance\u0027, FloatType(), True),\n    StructField(\u0027xm_flag\u0027, ShortType(), True),\n    StructField(\u0027allwise_oid\u0027, IntegerType(), True),\n    StructField(\u0027number_of_neighbours\u0027, ByteType(), True),\n    StructField(\u0027number_of_mates\u0027, ByteType(), True),\n])\n\n# 2MASS:\ntmasspscxsc_best_neighbour_schema \u003d StructType([\n    StructField(\u0027source_id\u0027, LongType(), True),\n    StructField(\u0027original_ext_source_id\u0027, StringType(), True),\n    StructField(\u0027angular_distance\u0027, FloatType(), True),\n    StructField(\u0027xm_flag\u0027, ShortType(), True),\n    StructField(\u0027clean_tmass_psc_xsc_oid\u0027, IntegerType(), True),\n    StructField(\u0027number_of_neighbours\u0027, ByteType(), True),\n    StructField(\u0027number_of_mates\u0027, ByteType(), True),\n])\n\n\n# sanity checks:\n#print (gaia_source_schema)\n\n",
      "user": "admin",
      "dateUpdated": "2021-12-02 11:52:48.498",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": true,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1638439831593_511123515",
      "id": "20210504-131126_1544574772",
      "dateCreated": "2021-12-02 10:10:31.593",
      "dateStarted": "2021-12-02 11:52:48.502",
      "dateFinished": "2021-12-02 11:53:15.579",
      "status": "FINISHED"
    },
    {
      "title": "Utility function definitions",
      "text": "%pyspark\n\n# useful definitions\n\n# number of buckets for our platform\nNUM_BUCKETS \u003d 2048\n\n# and to re-establish the resource in a new (or reset) spark context:\ndef reattachParquetFileResourceToSparkContext(table_name, file_path, *schema_structures):\n    \"\"\"\n    Creates a Spark (in-memory) meta-record for the table resource specified for querying \n    through the PySpark SQL API.\n    \n    Assumes that the table contains the Gaia source_id attribute and that the files have \n    been previously partitioned, bucketed and sorted on this field in parquet format\n    - see function saveToBinnedParquet().  If the table name specified already exists in the\n    catalogue IT WILL BE REMOVED (but the underlying data, assumed external, will remain).\n    \n    Parameters\n    ----------\n    table_name : str\n        The table name to be used as the identifier in SQL queries etc.\n    file_path : str\n        The full disk file system path name to the folder containing the parquet file set. \n    schema_structures : StructType\n        One or more schema structures expressed as a StructType object containing a list of\n        StructField(field_name : str, type : data_type : DataType(), nullable : boolean)\n    \"\"\"\n\n    # put in the columns and their data types ...\n    table_create_statement \u003d \"CREATE TABLE `\" + table_name + \"` (\"\n    for schema_structure in schema_structures:\n        for field in schema_structure:\n            table_create_statement +\u003d \"`\" + field.name + \"` \" + field.dataType.simpleString() + \",\"\n    # ... zapping that extraneous comma at the end\n    table_create_statement \u003d table_create_statement[:-1]\n        \n    # append the organisational details \n    table_create_statement +\u003d \") USING parquet OPTIONS (path \u0027\" + file_path + \"\u0027) \"\n    table_create_statement +\u003d \"CLUSTERED BY (source_id) SORTED BY (source_id) INTO %d\"%(NUM_BUCKETS) + \" BUCKETS\"\n    \n    # sanity check\n    print(table_create_statement)\n    \n    # scrub any existing record - N.B. tables defined in this way are EXTERNAL, so this statement will not scrub\n    # the underlying file data set. Also if the table doesn\u0027t exist, this will silently do nothing (no exception\n    # will be thrown).\n    spark.sql(\"DROP TABLE IF EXISTS \" + table_name)\n    \n    # create the table resource\n    spark.sql(table_create_statement)\n",
      "user": "admin",
      "dateUpdated": "2021-12-02 11:53:15.635",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": true,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1638439831593_1074685764",
      "id": "20210504-131319_1186301617",
      "dateCreated": "2021-12-02 10:10:31.593",
      "dateStarted": "2021-12-02 11:53:15.637",
      "dateFinished": "2021-12-02 11:53:15.653",
      "status": "FINISHED"
    },
    {
      "title": "Set up the catalogues on the platform",
      "text": "%pyspark\n\n# database name to create\ndatabase \u003d \"gaiaedr3\"\n\n# root data store path: TODO change this to the official one when established.\ndata_store \u003d \"file:////data/gaia/GEDR3/\" # \"file:////user/nch/PARQUET/REPARTITIONED/\"\n\n# create the database and switch the current SQL database context to it (from default)\nspark.sql(\"create database \" + database)\nspark.sql(\"use \" + database)\n\n# create the tables against their corresponding file sets and schema\nreattachParquetFileResourceToSparkContext(\"gaia_source\", data_store + \"GEDR3_GAIASOURCE\", gaia_source_schema)\nreattachParquetFileResourceToSparkContext(\"gaia_source_tmasspsc_best_neighbours\", data_store + \"GEDR3_2MASSPSC_BEST_NEIGHBOURS\", tmasspscxsc_best_neighbour_schema, twomass_psc_schema)\nreattachParquetFileResourceToSparkContext(\"gaia_source_allwise_best_neighbours\", data_store + \"GEDR3_ALLWISE_BEST_NEIGHBOURS\", allwise_best_neighbour_schema, twomass_psc_schema)\nreattachParquetFileResourceToSparkContext(\"gaia_source_ps1_best_neighbours\", data_store + \"GEDR3_PS1_BEST_NEIGHBOURS\", panstarrs1_best_neighbour_schema, panstarrs_dr1_otmo_schema)\n\n\n\n",
      "user": "admin",
      "dateUpdated": "2021-12-02 11:53:15.738",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "CREATE TABLE `gaia_source` (`solution_id` bigint,`designation` string,`source_id` bigint,`random_index` bigint,`ref_epoch` float,`ra` double,`ra_error` double,`dec` double,`dec_error` double,`parallax` double,`parallax_error` double,`parallax_over_error` float,`pm` float,`pmra` double,`pmra_error` float,`pmdec` double,`pmdec_error` float,`ra_dec_corr` float,`ra_parallax_corr` float,`ra_pmra_corr` float,`ra_pmdec_corr` float,`dec_parallax_corr` float,`dec_pmra_corr` float,`dec_pmdec_corr` float,`parallax_pmra_corr` float,`parallax_pmdec_corr` float,`pmra_pmdec_corr` float,`astrometric_n_obs_al` smallint,`astrometric_n_obs_ac` smallint,`astrometric_n_good_obs_al` smallint,`astrometric_n_bad_obs_al` smallint,`astrometric_gof_al` float,`astrometric_chi2_al` float,`astrometric_excess_noise` float,`astrometric_excess_noise_sig` float,`astrometric_params_solved` smallint,`astrometric_primary_flag` boolean,`nu_eff_used_in_astrometry` float,`pseudocolour` float,`pseudocolour_error` float,`ra_pseudocolour_corr` float,`dec_pseudocolour_corr` float,`parallax_pseudocolour_corr` float,`pmra_pseudocolour_corr` float,`pmdec_pseudocolour_corr` float,`astrometric_matched_transits` smallint,`visibility_periods_used` smallint,`astrometric_sigma5d_max` float,`matched_transits` smallint,`new_matched_transits` smallint,`matched_transits_removed` smallint,`ipd_gof_harmonic_amplitude` float,`ipd_gof_harmonic_phase` float,`ipd_frac_multi_peak` smallint,`ipd_frac_odd_win` smallint,`ruwe` float,`scan_direction_strength_k1` float,`scan_direction_strength_k2` float,`scan_direction_strength_k3` float,`scan_direction_strength_k4` float,`scan_direction_mean_k1` float,`scan_direction_mean_k2` float,`scan_direction_mean_k3` float,`scan_direction_mean_k4` float,`duplicated_source` boolean,`phot_g_n_obs` smallint,`phot_g_mean_flux` double,`phot_g_mean_flux_error` float,`phot_g_mean_flux_over_error` float,`phot_g_mean_mag` float,`phot_bp_n_obs` smallint,`phot_bp_mean_flux` double,`phot_bp_mean_flux_error` float,`phot_bp_mean_flux_over_error` float,`phot_bp_mean_mag` float,`phot_rp_n_obs` smallint,`phot_rp_mean_flux` double,`phot_rp_mean_flux_error` float,`phot_rp_mean_flux_over_error` float,`phot_rp_mean_mag` float,`phot_bp_n_contaminated_transits` smallint,`phot_bp_n_blended_transits` smallint,`phot_rp_n_contaminated_transits` smallint,`phot_rp_n_blended_transits` smallint,`phot_proc_mode` smallint,`phot_bp_rp_excess_factor` float,`bp_rp` float,`bp_g` float,`g_rp` float,`dr2_radial_velocity` float,`dr2_radial_velocity_error` float,`dr2_rv_nb_transits` smallint,`dr2_rv_template_teff` float,`dr2_rv_template_logg` float,`dr2_rv_template_fe_h` float,`l` double,`b` double,`ecl_lon` double,`ecl_lat` double) USING parquet OPTIONS (path \u0027file:////data/gaia/GEDR3/GEDR3_GAIASOURCE\u0027) CLUSTERED BY (source_id) SORTED BY (source_id) INTO 2048 BUCKETS\nCREATE TABLE `gaia_source_tmasspsc_best_neighbours` (`source_id` bigint,`original_ext_source_id` string,`angular_distance` float,`xm_flag` smallint,`clean_tmass_psc_xsc_oid` int,`number_of_neighbours` tinyint,`number_of_mates` tinyint,`ra` double,`dec` double,`err_maj` float,`err_min` float,`err_ang` smallint,`designation` string,`j_m` float,`j_cmsig` float,`j_msigcom` float,`j_snr` float,`h_m` float,`h_cmsig` float,`h_msigcom` float,`h_snr` float,`k_m` float,`k_cmsig` float,`k_msigcom` float,`k_snr` float,`ph_qual` string,`rd_flg` string,`bl_flg` string,`cc_flg` string,`ndet` string,`prox` float,`pxpa` smallint,`pxcntr` int,`gal_contam` smallint,`mp_flg` smallint,`pts_key` int,`hemis` string,`date` date,`scan` smallint,`glon` float,`glat` float,`x_scan` float,`jdate` double,`j_psfchi` float,`h_psfchi` float,`k_psfchi` float,`j_m_stdap` float,`j_msig_stdap` float,`h_m_stdap` float,`h_msig_stdap` float,`k_m_stdap` float,`k_msig_stdap` float,`dist_edge_ns` int,`dist_edge_ew` int,`dist_edge_flg` string,`dup_src` smallint,`use_src` smallint,`a` string,`dist_opt` float,`phi_opt` smallint,`b_m_opt` float,`vr_m_opt` float,`nopt_mchs` smallint,`ext_key` int,`scan_key` int,`coadd_key` int,`coadd` smallint) USING parquet OPTIONS (path \u0027file:////data/gaia/GEDR3/GEDR3_2MASSPSC_BEST_NEIGHBOURS\u0027) CLUSTERED BY (source_id) SORTED BY (source_id) INTO 2048 BUCKETS\nCREATE TABLE `gaia_source_allwise_best_neighbours` (`source_id` bigint,`original_ext_source_id` string,`angular_distance` float,`xm_flag` smallint,`allwise_oid` int,`number_of_neighbours` tinyint,`number_of_mates` tinyint,`ra` double,`dec` double,`err_maj` float,`err_min` float,`err_ang` smallint,`designation` string,`j_m` float,`j_cmsig` float,`j_msigcom` float,`j_snr` float,`h_m` float,`h_cmsig` float,`h_msigcom` float,`h_snr` float,`k_m` float,`k_cmsig` float,`k_msigcom` float,`k_snr` float,`ph_qual` string,`rd_flg` string,`bl_flg` string,`cc_flg` string,`ndet` string,`prox` float,`pxpa` smallint,`pxcntr` int,`gal_contam` smallint,`mp_flg` smallint,`pts_key` int,`hemis` string,`date` date,`scan` smallint,`glon` float,`glat` float,`x_scan` float,`jdate` double,`j_psfchi` float,`h_psfchi` float,`k_psfchi` float,`j_m_stdap` float,`j_msig_stdap` float,`h_m_stdap` float,`h_msig_stdap` float,`k_m_stdap` float,`k_msig_stdap` float,`dist_edge_ns` int,`dist_edge_ew` int,`dist_edge_flg` string,`dup_src` smallint,`use_src` smallint,`a` string,`dist_opt` float,`phi_opt` smallint,`b_m_opt` float,`vr_m_opt` float,`nopt_mchs` smallint,`ext_key` int,`scan_key` int,`coadd_key` int,`coadd` smallint) USING parquet OPTIONS (path \u0027file:////data/gaia/GEDR3/GEDR3_ALLWISE_BEST_NEIGHBOURS\u0027) CLUSTERED BY (source_id) SORTED BY (source_id) INTO 2048 BUCKETS\nCREATE TABLE `gaia_source_ps1_best_neighbours` (`source_id` bigint,`clean_panstarrs1_oid` bigint,`original_ext_source_id` bigint,`angular_distance` float,`number_of_neighbours` tinyint,`number_of_mates` tinyint,`xm_flag` smallint,`obj_id` bigint,`projection_id` smallint,`sky_cell_id` smallint,`obj_info_flag` int,`quality_flag` smallint,`ra_mean` double,`dec_mean` double,`ra_mean_err` float,`dec_mean_err` float,`epoch_mean` double,`n_stack_detections` smallint,`n_detections` smallint,`ng` smallint,`nr` smallint,`ni` smallint,`nz` smallint,`ny` smallint,`g_qf_perfect` float,`g_mean_psf_mag` float,`g_mean_psf_mag_err` float,`g_mean_psf_mag_std` float,`g_mean_psf_mag_npt` smallint,`g_mean_psf_mag_min` float,`g_mean_psf_mag_max` float,`g_mean_kron_mag` float,`g_mean_kron_mag_err` float,`g_flags` int,`r_qf_perfect` float,`r_mean_psf_mag` float,`r_mean_psf_mag_err` float,`r_mean_psf_mag_std` float,`r_mean_psf_mag_npt` smallint,`r_mean_psf_mag_min` float,`r_mean_psf_mag_max` float,`r_mean_kron_mag` float,`r_mean_kron_mag_err` float,`r_flags` int,`i_qf_perfect` float,`i_mean_psf_mag` float,`i_mean_psf_mag_err` float,`i_mean_psf_mag_std` float,`i_mean_psf_mag_npt` smallint,`i_mean_psf_mag_min` float,`i_mean_psf_mag_max` float,`i_mean_kron_mag` float,`i_mean_kron_mag_err` float,`i_flags` int,`z_qf_perfect` float,`z_mean_psf_mag` float,`z_mean_psf_mag_err` float,`z_mean_psf_mag_std` float,`z_mean_psf_mag_npt` smallint,`z_mean_psf_mag_min` float,`z_mean_psf_mag_max` float,`z_mean_kron_mag` float,`z_mean_kron_mag_err` float,`z_flags` int,`y_qf_perfect` float,`y_mean_psf_mag` float,`y_mean_psf_mag_err` float,`y_mean_psf_mag_std` float,`y_mean_psf_mag_npt` smallint,`y_mean_psf_mag_min` float,`y_mean_psf_mag_max` float,`y_mean_kron_mag` float,`y_mean_kron_mag_err` float,`y_flags` int) USING parquet OPTIONS (path \u0027file:////data/gaia/GEDR3/GEDR3_PS1_BEST_NEIGHBOURS\u0027) CLUSTERED BY (source_id) SORTED BY (source_id) INTO 2048 BUCKETS\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1638439831593_954976026",
      "id": "20210504-131439_625331903",
      "dateCreated": "2021-12-02 10:10:31.593",
      "dateStarted": "2021-12-02 11:53:15.741",
      "dateFinished": "2021-12-02 11:53:18.079",
      "status": "FINISHED"
    },
    {
      "title": "Show details of databases and tables",
      "text": "%pyspark\n\n# show the database(s) now available within the context\nspark.sql(\"show databases\").show()\n\n# show the contents of the catalogue store that has been set up\nspark.catalog.listTables()\n",
      "user": "admin",
      "dateUpdated": "2021-12-02 11:53:18.146",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": true,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+---------+\n|namespace|\n+---------+\n|  default|\n| gaiaedr3|\n+---------+\n\n[Table(name\u003d\u0027gaia_source\u0027, database\u003d\u0027gaiaedr3\u0027, description\u003dNone, tableType\u003d\u0027EXTERNAL\u0027, isTemporary\u003dFalse), Table(name\u003d\u0027gaia_source_allwise_best_neighbours\u0027, database\u003d\u0027gaiaedr3\u0027, description\u003dNone, tableType\u003d\u0027EXTERNAL\u0027, isTemporary\u003dFalse), Table(name\u003d\u0027gaia_source_ps1_best_neighbours\u0027, database\u003d\u0027gaiaedr3\u0027, description\u003dNone, tableType\u003d\u0027EXTERNAL\u0027, isTemporary\u003dFalse), Table(name\u003d\u0027gaia_source_tmasspsc_best_neighbours\u0027, database\u003d\u0027gaiaedr3\u0027, description\u003dNone, tableType\u003d\u0027EXTERNAL\u0027, isTemporary\u003dFalse)]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d0"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d1"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d2"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d3"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1638439831594_1952152474",
      "id": "20210504-132955_1641890430",
      "dateCreated": "2021-12-02 10:10:31.594",
      "dateStarted": "2021-12-02 11:53:18.149",
      "dateFinished": "2021-12-02 11:53:21.458",
      "status": "FINISHED"
    },
    {
      "title": "Check location on disk for main catalogue table from metastore",
      "text": "%pyspark\n\nspark.sql(\u0027DESCRIBE EXTENDED gaia_source\u0027).show(300, truncate \u003d False)\n",
      "user": "admin",
      "dateUpdated": "2021-12-02 11:53:21.553",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------------------------------+----------------------------------------+-------+\n|col_name                       |data_type                               |comment|\n+-------------------------------+----------------------------------------+-------+\n|solution_id                    |bigint                                  |null   |\n|designation                    |string                                  |null   |\n|source_id                      |bigint                                  |null   |\n|random_index                   |bigint                                  |null   |\n|ref_epoch                      |float                                   |null   |\n|ra                             |double                                  |null   |\n|ra_error                       |double                                  |null   |\n|dec                            |double                                  |null   |\n|dec_error                      |double                                  |null   |\n|parallax                       |double                                  |null   |\n|parallax_error                 |double                                  |null   |\n|parallax_over_error            |float                                   |null   |\n|pm                             |float                                   |null   |\n|pmra                           |double                                  |null   |\n|pmra_error                     |float                                   |null   |\n|pmdec                          |double                                  |null   |\n|pmdec_error                    |float                                   |null   |\n|ra_dec_corr                    |float                                   |null   |\n|ra_parallax_corr               |float                                   |null   |\n|ra_pmra_corr                   |float                                   |null   |\n|ra_pmdec_corr                  |float                                   |null   |\n|dec_parallax_corr              |float                                   |null   |\n|dec_pmra_corr                  |float                                   |null   |\n|dec_pmdec_corr                 |float                                   |null   |\n|parallax_pmra_corr             |float                                   |null   |\n|parallax_pmdec_corr            |float                                   |null   |\n|pmra_pmdec_corr                |float                                   |null   |\n|astrometric_n_obs_al           |smallint                                |null   |\n|astrometric_n_obs_ac           |smallint                                |null   |\n|astrometric_n_good_obs_al      |smallint                                |null   |\n|astrometric_n_bad_obs_al       |smallint                                |null   |\n|astrometric_gof_al             |float                                   |null   |\n|astrometric_chi2_al            |float                                   |null   |\n|astrometric_excess_noise       |float                                   |null   |\n|astrometric_excess_noise_sig   |float                                   |null   |\n|astrometric_params_solved      |smallint                                |null   |\n|astrometric_primary_flag       |boolean                                 |null   |\n|nu_eff_used_in_astrometry      |float                                   |null   |\n|pseudocolour                   |float                                   |null   |\n|pseudocolour_error             |float                                   |null   |\n|ra_pseudocolour_corr           |float                                   |null   |\n|dec_pseudocolour_corr          |float                                   |null   |\n|parallax_pseudocolour_corr     |float                                   |null   |\n|pmra_pseudocolour_corr         |float                                   |null   |\n|pmdec_pseudocolour_corr        |float                                   |null   |\n|astrometric_matched_transits   |smallint                                |null   |\n|visibility_periods_used        |smallint                                |null   |\n|astrometric_sigma5d_max        |float                                   |null   |\n|matched_transits               |smallint                                |null   |\n|new_matched_transits           |smallint                                |null   |\n|matched_transits_removed       |smallint                                |null   |\n|ipd_gof_harmonic_amplitude     |float                                   |null   |\n|ipd_gof_harmonic_phase         |float                                   |null   |\n|ipd_frac_multi_peak            |smallint                                |null   |\n|ipd_frac_odd_win               |smallint                                |null   |\n|ruwe                           |float                                   |null   |\n|scan_direction_strength_k1     |float                                   |null   |\n|scan_direction_strength_k2     |float                                   |null   |\n|scan_direction_strength_k3     |float                                   |null   |\n|scan_direction_strength_k4     |float                                   |null   |\n|scan_direction_mean_k1         |float                                   |null   |\n|scan_direction_mean_k2         |float                                   |null   |\n|scan_direction_mean_k3         |float                                   |null   |\n|scan_direction_mean_k4         |float                                   |null   |\n|duplicated_source              |boolean                                 |null   |\n|phot_g_n_obs                   |smallint                                |null   |\n|phot_g_mean_flux               |double                                  |null   |\n|phot_g_mean_flux_error         |float                                   |null   |\n|phot_g_mean_flux_over_error    |float                                   |null   |\n|phot_g_mean_mag                |float                                   |null   |\n|phot_bp_n_obs                  |smallint                                |null   |\n|phot_bp_mean_flux              |double                                  |null   |\n|phot_bp_mean_flux_error        |float                                   |null   |\n|phot_bp_mean_flux_over_error   |float                                   |null   |\n|phot_bp_mean_mag               |float                                   |null   |\n|phot_rp_n_obs                  |smallint                                |null   |\n|phot_rp_mean_flux              |double                                  |null   |\n|phot_rp_mean_flux_error        |float                                   |null   |\n|phot_rp_mean_flux_over_error   |float                                   |null   |\n|phot_rp_mean_mag               |float                                   |null   |\n|phot_bp_n_contaminated_transits|smallint                                |null   |\n|phot_bp_n_blended_transits     |smallint                                |null   |\n|phot_rp_n_contaminated_transits|smallint                                |null   |\n|phot_rp_n_blended_transits     |smallint                                |null   |\n|phot_proc_mode                 |smallint                                |null   |\n|phot_bp_rp_excess_factor       |float                                   |null   |\n|bp_rp                          |float                                   |null   |\n|bp_g                           |float                                   |null   |\n|g_rp                           |float                                   |null   |\n|dr2_radial_velocity            |float                                   |null   |\n|dr2_radial_velocity_error      |float                                   |null   |\n|dr2_rv_nb_transits             |smallint                                |null   |\n|dr2_rv_template_teff           |float                                   |null   |\n|dr2_rv_template_logg           |float                                   |null   |\n|dr2_rv_template_fe_h           |float                                   |null   |\n|l                              |double                                  |null   |\n|b                              |double                                  |null   |\n|ecl_lon                        |double                                  |null   |\n|ecl_lat                        |double                                  |null   |\n|                               |                                        |       |\n|# Detailed Table Information   |                                        |       |\n|Database                       |gaiaedr3                                |       |\n|Table                          |gaia_source                             |       |\n|Created Time                   |Thu Dec 02 11:53:17 UTC 2021            |       |\n|Last Access                    |UNKNOWN                                 |       |\n|Created By                     |Spark 3.1.2                             |       |\n|Type                           |EXTERNAL                                |       |\n|Provider                       |parquet                                 |       |\n|Num Buckets                    |2048                                    |       |\n|Bucket Columns                 |[`source_id`]                           |       |\n|Sort Columns                   |[`source_id`]                           |       |\n|Location                       |file:///data/gaia/GEDR3/GEDR3_GAIASOURCE|       |\n+-------------------------------+----------------------------------------+-------+\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1638439831594_1346090265",
      "id": "20210504-141425_1480464936",
      "dateCreated": "2021-12-02 10:10:31.594",
      "dateStarted": "2021-12-02 11:53:21.555",
      "dateFinished": "2021-12-02 11:53:21.706",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n",
      "user": "admin",
      "dateUpdated": "2021-12-02 11:53:21.756",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1638439831594_535647599",
      "id": "20210521-084938_875368697",
      "dateCreated": "2021-12-02 10:10:31.594",
      "dateStarted": "2021-12-02 11:53:21.758",
      "dateFinished": "2021-12-02 11:53:21.765",
      "status": "FINISHED"
    }
  ],
  "name": "SetUp",
  "id": "2GNJYQXFC",
  "defaultInterpreterGroup": "spark",
  "version": "0.10.0",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {
    "isRunning": true
  }
}